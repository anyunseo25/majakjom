/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as YeockRouteImport } from './routes/yeock'
import { Route as ListRouteImport } from './routes/list'
import { Route as JakhonRouteImport } from './routes/jakhon'
import { Route as BasicRouteImport } from './routes/basic'
import { Route as YeockYugookRouteImport } from './routes/yeock/yugook'
import { Route as YeockYeockmanRouteImport } from './routes/yeock/yeockman'
import { Route as YeockGuitarRouteImport } from './routes/yeock/guitar'
import { Route as Yeock3panRouteImport } from './routes/yeock/3pan'
import { Route as Yeock2panRouteImport } from './routes/yeock/2pan'
import { Route as Yeock1panRouteImport } from './routes/yeock/1pan'

const YeockRoute = YeockRouteImport.update({
  id: '/yeock',
  path: '/yeock',
  getParentRoute: () => rootRouteImport,
} as any)
const ListRoute = ListRouteImport.update({
  id: '/list',
  path: '/list',
  getParentRoute: () => rootRouteImport,
} as any)
const JakhonRoute = JakhonRouteImport.update({
  id: '/jakhon',
  path: '/jakhon',
  getParentRoute: () => rootRouteImport,
} as any)
const BasicRoute = BasicRouteImport.update({
  id: '/basic',
  path: '/basic',
  getParentRoute: () => rootRouteImport,
} as any)
const YeockYugookRoute = YeockYugookRouteImport.update({
  id: '/yugook',
  path: '/yugook',
  getParentRoute: () => YeockRoute,
} as any)
const YeockYeockmanRoute = YeockYeockmanRouteImport.update({
  id: '/yeockman',
  path: '/yeockman',
  getParentRoute: () => YeockRoute,
} as any)
const YeockGuitarRoute = YeockGuitarRouteImport.update({
  id: '/guitar',
  path: '/guitar',
  getParentRoute: () => YeockRoute,
} as any)
const Yeock3panRoute = Yeock3panRouteImport.update({
  id: '/3pan',
  path: '/3pan',
  getParentRoute: () => YeockRoute,
} as any)
const Yeock2panRoute = Yeock2panRouteImport.update({
  id: '/2pan',
  path: '/2pan',
  getParentRoute: () => YeockRoute,
} as any)
const Yeock1panRoute = Yeock1panRouteImport.update({
  id: '/1pan',
  path: '/1pan',
  getParentRoute: () => YeockRoute,
} as any)

export interface FileRoutesByFullPath {
  '/basic': typeof BasicRoute
  '/jakhon': typeof JakhonRoute
  '/list': typeof ListRoute
  '/yeock': typeof YeockRouteWithChildren
  '/yeock/1pan': typeof Yeock1panRoute
  '/yeock/2pan': typeof Yeock2panRoute
  '/yeock/3pan': typeof Yeock3panRoute
  '/yeock/guitar': typeof YeockGuitarRoute
  '/yeock/yeockman': typeof YeockYeockmanRoute
  '/yeock/yugook': typeof YeockYugookRoute
}
export interface FileRoutesByTo {
  '/basic': typeof BasicRoute
  '/jakhon': typeof JakhonRoute
  '/list': typeof ListRoute
  '/yeock': typeof YeockRouteWithChildren
  '/yeock/1pan': typeof Yeock1panRoute
  '/yeock/2pan': typeof Yeock2panRoute
  '/yeock/3pan': typeof Yeock3panRoute
  '/yeock/guitar': typeof YeockGuitarRoute
  '/yeock/yeockman': typeof YeockYeockmanRoute
  '/yeock/yugook': typeof YeockYugookRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/basic': typeof BasicRoute
  '/jakhon': typeof JakhonRoute
  '/list': typeof ListRoute
  '/yeock': typeof YeockRouteWithChildren
  '/yeock/1pan': typeof Yeock1panRoute
  '/yeock/2pan': typeof Yeock2panRoute
  '/yeock/3pan': typeof Yeock3panRoute
  '/yeock/guitar': typeof YeockGuitarRoute
  '/yeock/yeockman': typeof YeockYeockmanRoute
  '/yeock/yugook': typeof YeockYugookRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/basic'
    | '/jakhon'
    | '/list'
    | '/yeock'
    | '/yeock/1pan'
    | '/yeock/2pan'
    | '/yeock/3pan'
    | '/yeock/guitar'
    | '/yeock/yeockman'
    | '/yeock/yugook'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/basic'
    | '/jakhon'
    | '/list'
    | '/yeock'
    | '/yeock/1pan'
    | '/yeock/2pan'
    | '/yeock/3pan'
    | '/yeock/guitar'
    | '/yeock/yeockman'
    | '/yeock/yugook'
  id:
    | '__root__'
    | '/basic'
    | '/jakhon'
    | '/list'
    | '/yeock'
    | '/yeock/1pan'
    | '/yeock/2pan'
    | '/yeock/3pan'
    | '/yeock/guitar'
    | '/yeock/yeockman'
    | '/yeock/yugook'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  BasicRoute: typeof BasicRoute
  JakhonRoute: typeof JakhonRoute
  ListRoute: typeof ListRoute
  YeockRoute: typeof YeockRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/yeock': {
      id: '/yeock'
      path: '/yeock'
      fullPath: '/yeock'
      preLoaderRoute: typeof YeockRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/list': {
      id: '/list'
      path: '/list'
      fullPath: '/list'
      preLoaderRoute: typeof ListRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jakhon': {
      id: '/jakhon'
      path: '/jakhon'
      fullPath: '/jakhon'
      preLoaderRoute: typeof JakhonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/basic': {
      id: '/basic'
      path: '/basic'
      fullPath: '/basic'
      preLoaderRoute: typeof BasicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/yeock/yugook': {
      id: '/yeock/yugook'
      path: '/yugook'
      fullPath: '/yeock/yugook'
      preLoaderRoute: typeof YeockYugookRouteImport
      parentRoute: typeof YeockRoute
    }
    '/yeock/yeockman': {
      id: '/yeock/yeockman'
      path: '/yeockman'
      fullPath: '/yeock/yeockman'
      preLoaderRoute: typeof YeockYeockmanRouteImport
      parentRoute: typeof YeockRoute
    }
    '/yeock/guitar': {
      id: '/yeock/guitar'
      path: '/guitar'
      fullPath: '/yeock/guitar'
      preLoaderRoute: typeof YeockGuitarRouteImport
      parentRoute: typeof YeockRoute
    }
    '/yeock/3pan': {
      id: '/yeock/3pan'
      path: '/3pan'
      fullPath: '/yeock/3pan'
      preLoaderRoute: typeof Yeock3panRouteImport
      parentRoute: typeof YeockRoute
    }
    '/yeock/2pan': {
      id: '/yeock/2pan'
      path: '/2pan'
      fullPath: '/yeock/2pan'
      preLoaderRoute: typeof Yeock2panRouteImport
      parentRoute: typeof YeockRoute
    }
    '/yeock/1pan': {
      id: '/yeock/1pan'
      path: '/1pan'
      fullPath: '/yeock/1pan'
      preLoaderRoute: typeof Yeock1panRouteImport
      parentRoute: typeof YeockRoute
    }
  }
}

interface YeockRouteChildren {
  Yeock1panRoute: typeof Yeock1panRoute
  Yeock2panRoute: typeof Yeock2panRoute
  Yeock3panRoute: typeof Yeock3panRoute
  YeockGuitarRoute: typeof YeockGuitarRoute
  YeockYeockmanRoute: typeof YeockYeockmanRoute
  YeockYugookRoute: typeof YeockYugookRoute
}

const YeockRouteChildren: YeockRouteChildren = {
  Yeock1panRoute: Yeock1panRoute,
  Yeock2panRoute: Yeock2panRoute,
  Yeock3panRoute: Yeock3panRoute,
  YeockGuitarRoute: YeockGuitarRoute,
  YeockYeockmanRoute: YeockYeockmanRoute,
  YeockYugookRoute: YeockYugookRoute,
}

const YeockRouteWithChildren = YeockRoute._addFileChildren(YeockRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  BasicRoute: BasicRoute,
  JakhonRoute: JakhonRoute,
  ListRoute: ListRoute,
  YeockRoute: YeockRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
